name: Deploy Browser Extension

on:
  push:
    tags:
      - 'ecu-test-diff-[0-9]+.[0-9]+.[0-9]+'

jobs:
  version-check:
    runs-on: ubuntu-latest
    if: |
      startsWith(github.ref, 'refs/tags/ecu-test-diff-') ||
      github.event_name == 'release'
    outputs:
      proceed: ${{ steps.version-check.outputs.proceed }}
    steps:
      - uses: actions/checkout@v4
      - name: Check tag matches manifest version
        id: version-check
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

          # Tag ref of release refs/tags/<tag_name> as well
          TAG_VERSION="${GITHUB_REF#refs/tags/ecu-test-diff-}"
          MANIFEST_VERSION=$(jq -r '.version' static/manifest.json)
          echo "Tag version: $TAG_VERSION"
          echo "Manifest version: $MANIFEST_VERSION"

          if [ "$TAG_VERSION" != "$MANIFEST_VERSION" ]; then
            echo "❌ Tag version ($TAG_VERSION) does not match manifest version ($MANIFEST_VERSION)."
            echo "proceed=false" >> $GITHUB_OUTPUT
            exit 1
          elif [[ "{{ github.event_name }}" == "release" ]]; then
            ]]
          fi

          echo "✅ Tag version matches manifest version."
          echo "proceed=true" >> $GITHUB_OUTPUT

  build:
    needs: version-check
    if: needs.version-check.outputs.proceed == 'true'
    uses: ./.github/workflows/build.yml

  publish:
    needs: [version-check, build]
    if: ${{ github.env.DEPLOYMENT == 'True' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: ['chrome', 'firefox']
    steps:
      - name: Get artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.browser }}-extension
      - name: Set up Node v20
        if: ${{ matrix.browser == 'firefox' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      - name: Install web-ext
        if: matrix.browser == 'firefox'
        run: npm install -g web-ext
      - name: Publish to Firefox Add-on
        if: ${{ matrix.browser == 'firefox' }}
        env:
          AMO_JWT_ISSUER: ${{ secrets.AMO_JWT_ISSUER }}
          AMO_JWT_SECRET: ${{ secrets.AMO_JWT_SECRET }}
        run: |
          # extract artifact
          mkdir -p "./${{ matrix.browser }}-extension"
          unzip -o "${{ matrix.browser }}-extension.zip" -d "./${{ matrix.browser }}-extension"

          # lint the extension before signing
          web-ext lint \
            --source-dir="./${{ matrix.browser }}-extension" \
            --output=json \
            --pretty \
            --warnings-as-errors
          LINT_EXIT_CODE=$?
          if [ $LINT_EXIT_CODE -ne 0 ]; then
            echo "::error::Linting failed with exit code $LINT_EXIT_CODE. Submission canceled."
            exit 1
          fi

          # sign the extension
          web-ext sign \
            --api-key="$AMO_JWT_ISSUER" \
            --api-secret="$AMO_JWT_SECRET" \
            --channel=listed \
            --source-dir="./${{ matrix.browser }}-extension"
      - name: Publish to Chrome Web Store
        if: ${{ matrix.browser == 'chrome' }}
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          file-path: ${{ matrix.browser }}-extension.zip
          extension-id: ${{ secrets.EXTENSION_ID }}
          client-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          refresh-token: ${{ secrets.REFRESH_TOKEN }} # or "trustedTesters" for internal testing
